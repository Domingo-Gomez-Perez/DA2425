#lang racket
(define (inc a)
  (+ a 1))

(define (dec a)
  (- a 1))

(define (suma1 a b)
  (if (= a 0) 
      b 
      (inc (suma1 (dec a) b))))

;(suma1 4 5)
;(if (= 4 0) 5 (inc (suma1 (dec 4) 5))))
;(if (false) 5 (inc (suma1 (dec 4) 5))))
;(inc (suma1 (dec 4) 5))
;(inc (suma1 (- 4 1) 5))
;(inc (suma1 3 5))
;(inc (if (= 3 0) 5 (inc (suma1 (dec 3) 5)))))
;(inc (if (false) 5 (inc (suma1 (dec 3) 5)))))
;(inc (inc (suma1 (- 3 1) 5)))
;(inc (inc (suma1 2 5)))
;(inc (inc (if (= 2 0) 5 (inc (suma1 (dec 2) 5)))))
;(inc (inc (if (false) 5 (inc (suma1 (dec 2) 5)))))
;(inc (inc (inc (suma1 (dec 2) 5))))
;(inc (inc (inc (suma1 (- 2 1) 5))))
;(inc (inc (inc (suma1 1 5))))
;(inc (inc (inc (if (= 1 0) 5 (inc (suma1 (dec 1) 5))))))
;(inc (inc (inc (if (false) 5 (inc (suma1 (dec 1) 5))))))
;(inc (inc (inc (inc (suma1 (dec 1) 5)))))
;(inc (inc (inc (inc (suma1 (- 1 1) 5)))))
;(inc (inc (inc (inc (suma1 0 5)))))
;(inc (inc (inc (inc (if (= 4 0) 5 (inc (suma1 (dec 4) 5)))))))
;(inc (inc (inc (inc (if (true) 5 (inc (suma1 (dec 4) 5)))))))
;(inc (inc (inc (inc 5))))
;(inc (inc (inc (+ 5 1))))
;(inc (inc (inc 6)))
;(inc (inc (+ 6 1)))
;(inc (inc 7))
;(inc (+ 7 1))
;(inc 8)
;(+ 8 1)
;9

(define (suma2 a b)
  (if (= a 0) 
      b 
      (suma2 (dec a) (inc b))))

;(suma2 4 5)
;(if (= 4 0) 5 (suma2 (dec 4) (inc 5)))
;(if (false) 5 (suma2 (dec 4) (inc 5)))
;(suma2 (- 4 1) (+ 5 1))
;(suma2 3 6)
;(if (= 3 0) 6 (suma2 (dec 3) (inc 6)))
;(if (false) 6 (suma2 (dec 3) (inc 6)))
;(suma2 (dec 3) (inc 6))
;(suma2 (- 3 1) (+ 6 1))
;(suma2 2 7)
;(if (= 2 0) 7 (suma2 (dec 2) (inc 7)))
;(if (false) 7 (suma2 (dec 2) (inc 7)))
;(suma2 (dec 2) (inc 7))
;(suma2 (- 2 1) (+ 7 1))
;(suma2 1 8)
;(if (= 1 0) 8 (suma2 (dec 1) (inc 8)))
;(if (false) 8 (suma2 (dec 1) (inc 8)))
;(suma2 (- 1 1) (+ 8 1))
;(suma2 0 9)
;(if (= 0 0) 9 (suma2 (dec 0) (inc 9)))
;(if (true) 9 (suma2 (dec 0) (inc 9)))
;9