#lang racket

; Exercise 1.9

; Each of the following two procedures defines a method for adding two positive integers 
; in terms of the procedures `inc`, which increments its argument by 1, and `dec`, which decrements its argument by 1.

(define (inc x) (+ x 1))
(define (dec x) (- x 1))

; Using the substitution model, illustrate the process generated by each procedure in evaluating `(plus 4 5)`.  
; Are these processes iterative or recursive?

(define (plus a b)
  (if (= a 0) 
      b 
      (inc (plus (dec a) b))))

; (plus 4 5)
; (inc (plus 3 5))
; (inc (inc (plus 2 5)))
; (inc (inc (inc (plus 1 5))))
; (inc (inc (inc (inc (plus 0 5)))))
; (inc (inc (inc (inc 5))))
; (inc (inc (inc 6)))
; (inc (inc 7))
; (inc 8)
; 9

; It is recursive due to the fact that the operations are acumulated until the base case is reached. 



(define (plus a b)
  (if (= a 0) 
      b 
      (plus (dec a) (inc b))))

; (plus 4 5)
; (plus dec(4) inc(5))
; (plus 3 6)
; (plus dec(3) inc(6))
; (plus 2 7)
; (plus dec(2) inc(7))
; (plus 1 8)
; (plus dec(1) inc(8))
; (plus 0 9)
; 9

; It is iterative due to the fact that the state is updated in each recursive call without accumulating deferred operations.

