 _________________________________________________
| factorial: <procedure>                  Globals |
|   ___________________________________________   |
|  | n: 6                              call 1  |  |
|  |   ____________________________________    |  | 
|  |  | n: 5                        call 2 |   |  |
|  |  |   _______________________________  |   |  |
|  |  |  | n: 4                   call 3 | |   |  |
|  |  |  |   __________________________  | |   |  |
|  |  |  |  | n: 3            call 4   | | |   |  |
|  |  |  |  |   _____________________  | | |   |  |
|  |  |  |  |  | n: 2         call 5 | | | |   |  |
|  |  |  |  |  |   ________________  | | | |   |  |
|  |  |  |  |  |  | n: 1    call 6 | | | | |   |  |
|  |  |  |  |  |  |________________| | | | |   |  |
|  |  |  |  |  |_____________________| | | |   |  |
|  |  |  |  |__________________________| | |   |  |
|  |  |  |_______________________________| |   |  |
|  |  |____________________________________|   |  |
|  |___________________________________________|  |
|_________________________________________________|

 _________________________________________________
| factorial: <procedure>                  Globals |
|   ____________________________________________  |
|  |  n: 6                            call 1   |  |
|  |  _______________________________________  |  |
|  |  |product: 1  counter: 1   max-count: 6 | |  | ; Inicialización
|  |  |______________________________________| |  |
|  |   ____________________________________    |  | 
|  |  | n: 5                        call 2 |   |  |
|  |  _______________________________________  |  |
|  |  |product: 2  counter: 2   max-count: 6 | |  | ; Inicialización
|  |  |______________________________________| |  |

|  |  |   _______________________________  |   |  |
|  |  |  | n: 4                   call 3 | |   |  |
|  |  |  |   __________________________  | |   |  |
|  |  |  |  | n: 3            call 4   | | |   |  |
|  |  |  |  |   _____________________  | | |   |  |
|  |  |  |  |  | n: 2         call 5 | | | |   |  |
|  |  |  |  |  |   ________________  | | | |   |  |
|  |  |  |  |  |  | n: 1    call 6 | | | | |   |  |
|  |  |  |  |  |  |________________| | | | |   |  |
|  |  |  |  |  |_____________________| | | |   |  |
|  |  |  |  |__________________________| | |   |  |
|  |  |  |_______________________________| |   |  |
|  |  |____________________________________|   |  |
|  |___________________________________________|  |
|_________________________________________________|

 ____________________________________________
| factorial: <procedure>           Globals   |
|____________________________________________|

 ____________________________________________
| fact-iter: <procedure>             outer   |
|  _______________________________________   |
| | product: 1      counter: 1   max-count: 6 |  ; Inicialización
| |___________________________________________|

 ____________________________________________
| fact-iter: <procedure>             outer   |
|  _______________________________________   |
| | product: 1      counter: 2   max-count: 6 |  ; 1 * 1 = 1
| |___________________________________________|

 ____________________________________________
| fact-iter: <procedure>             outer   |
|  _______________________________________   |
| | product: 2      counter: 3   max-count: 6 |  ; 1 * 2 = 2
| |___________________________________________|

 ____________________________________________
| fact-iter: <procedure>             outer   |
|  _______________________________________   |
| | product: 6      counter: 4   max-count: 6 |  ; 2 * 3 = 6
| |___________________________________________|

 ____________________________________________
| fact-iter: <procedure>             outer   |
|  _______________________________________   |
| | product: 24     counter: 5   max-count: 6 |  ; 6 * 4 = 24
| |___________________________________________|

 ____________________________________________
| fact-iter: <procedure>             outer   |
|  _______________________________________   |
| | product: 120    counter: 6   max-count: 6 |  ; 24 * 5 = 120
| |___________________________________________|

 ____________________________________________
| fact-iter: <procedure>             outer   |
|  _______________________________________   |
| | product: 720    counter: 7   max-count: 6 |  ; 120 * 6 = 720 (final)
| |___________________________________________|

ponerlo como lo del recursivo que dice que no se elimina hasta acabar el ambiente